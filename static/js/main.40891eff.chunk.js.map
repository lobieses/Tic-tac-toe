{"version":3,"sources":["Components/Game/gameField/gameField.module.css","Components/Common/FormControls/FormControls.module.css","Components/InitialGame/initialGame.module.css","Components/Game/game.module.css","Components/Game/gameField/stylesForWinLine.module.css","Components/Game/winOrDrawField/winOrDrawField.module.css","utils/validator/validator.js","utils/checkWinner.js","Redux/app-reducer.js","Redux/store.js","Components/Game/gameField/gameField.jsx","Components/Game/scoreField/scoreField.jsx","Components/Game/winOrDrawField/winOrDrawField.jsx","Components/Game/game.jsx","Components/Game/gameContainer.jsx","Components/Common/FormControls/FormControls.js","Components/InitialGame/initialGame.jsx","Components/InitialGame/initialGameContainer.jsx","App.js","reportWebVitals.js","index.js","Components/Game/scoreField/scoreField.module.css"],"names":["module","exports","maxLength","validators","checkWinnerFunc","field","isDraw","some","elem","combination","winCode","UPDATE_GAME_FIELD","CHANGE_PLAYER","CHECK_WINNER","SET_PLAYERS","FINISH_INITIAL_PROCESS","RENEW_GAME","initialState","players","undefined","initialProcessIsFinish","currentPlayer","winnerPlayer","winCombination","appReducer","state","action","type","name","score","newField","numOfClickedField","newPlayer","checkWinner","reducers","combineReducers","game","gameReducer","store","createStore","GameField","props","fields","map","a","num","thisFieldIsBusy","classForWinnerLine","winLine","style","cross","zero","className","markupField","gameField","onClick","onPlayerStep","ScoreField","playersAndScore","playerInfo","scorePlayer","namesPlayer","current","WinOrDrawField","win","onRetryGame","Game","container","connect","updateGameField","changePlayer","renewGame","FormControls","errors","status","touched","form","error","children","Input","maxLengthForValidate","value","length","validateForForm","test","trim","checkForError","func","InitialGame","initialValues","player1","player2","onSubmit","handleSubmit","placeholder","component","validate","setPlayers","finishInitialProcess","AppContainer","isStartGame","TicTacToe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40891eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"gameField_game__39_EX\",\"markupField\":\"gameField_markupField__1MgFe\",\"gameField\":\"gameField_gameField__1HTle\",\"zero\":\"gameField_zero__7Y3p5\",\"cross\":\"gameField_cross__1a9SY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormControls_form__mqmfj\",\"error\":\"FormControls_error__1IPYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"initialGame_container__1L8M8\",\"form\":\"initialGame_form__2F5Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"game_container__3sQTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontal1\":\"stylesForWinLine_horizontal1__14uIC\",\"horizontal2\":\"stylesForWinLine_horizontal2__1PQOG\",\"horizontal3\":\"stylesForWinLine_horizontal3__2LYHb\",\"vertical1\":\"stylesForWinLine_vertical1__2UzSt\",\"vertical2\":\"stylesForWinLine_vertical2__2hZxy\",\"vertical3\":\"stylesForWinLine_vertical3__2gO5D\",\"diagonal1\":\"stylesForWinLine_diagonal1__22wnh\",\"diagonal2\":\"stylesForWinLine_diagonal2__2ALaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"win\":\"winOrDrawField_win__1L6aR\"};","export const ValidateList = validators => value => {\r\n    for(const func of validators) {\r\n        const checkForError = func(value);\r\n        if(checkForError) return checkForError;\r\n    }\r\n\r\n   return undefined;\r\n}\r\n\r\nexport const maxLength = maxLength => value => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbol`;\r\n}\r\n\r\nexport const nameHasSpaces = (name) => {\r\n    let result = /\\s/.test(name.trim());\r\n    if(result) return 'name should not has spaces';\r\n}\r\n\r\nexport const nameIsEmpty = (name) => {\r\n    if(!name.trim()) return 'name is empty';\r\n}\r\n","export const checkWinnerFunc = (field) => {\r\n    const isDraw = !field.some((elem) => {\r\n        if(elem) return false;\r\n        return true;\r\n    });\r\n\r\n    const winCombinations = [\r\n        {combination: [0, 1, 2], winCode: 'horizontal1'},\r\n        {combination: [3, 4, 5], winCode: 'horizontal2'},\r\n        {combination: [6, 7, 8], winCode: 'horizontal3'},\r\n\r\n        {combination: [0, 3, 6], winCode: 'vertical1'},\r\n        {combination: [1, 4, 7], winCode: 'vertical2'},\r\n        {combination: [2, 5, 8], winCode: 'vertical3'},\r\n\r\n        {combination: [0, 4, 8], winCode: 'diagonal1'},\r\n        {combination: [2, 4, 6], winCode: 'diagonal2'}\r\n    ];\r\n\r\n    for (let combination of winCombinations) {\r\n        if (field[combination.combination[0]] === field[combination.combination[1]] &&\r\n            field[combination.combination[1]] === field[combination.combination[2]] &&\r\n            field[combination.combination[0]] !== '') {\r\n            return combination.winCode;\r\n        }\r\n    }\r\n\r\n    if(isDraw) return 'isDraw';\r\n\r\n    return false;\r\n}\r\n\r\n","import {checkWinnerFunc} from \"../utils/checkWinner\";\r\n\r\nconst UPDATE_GAME_FIELD = 'UPDATE_GAME_FIELD';\r\nconst CHANGE_PLAYER = 'CHANGE_PLAYER';\r\nconst CHECK_WINNER = 'CHECK_WINNER';\r\nconst SET_PLAYERS = 'SET_PLAYERS';\r\nconst FINISH_INITIAL_PROCESS = 'FINISH_INITIAL_PROCESS';\r\nconst RENEW_GAME = 'RENEW_GAME';\r\n\r\nlet initialState = {\r\n    players: undefined,\r\n    initialProcessIsFinish: false,\r\n    currentPlayer: 'X',\r\n    field: ['', '', '',\r\n            '', '', '',\r\n            '', '', ''],\r\n    winnerPlayer: undefined,\r\n    winCombination: undefined,\r\n    isDraw: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PLAYERS: {\r\n            return {\r\n                ...state,\r\n                players: {\r\n                    'X': {\r\n                            name: action.players[0],\r\n                            score: 0,\r\n                        },\r\n                    'O': {\r\n                            name: action.players[1],\r\n                            score: 0,\r\n                        },\r\n                }\r\n            }\r\n        }\r\n        case FINISH_INITIAL_PROCESS: {\r\n            return {\r\n                ...state,\r\n                initialProcessIsFinish: true\r\n            }\r\n        }\r\n        case UPDATE_GAME_FIELD: {\r\n            let newField = state.field;\r\n            newField[action.numOfClickedField] = state.currentPlayer;\r\n\r\n            return {\r\n                ...state,\r\n                field: [...newField]\r\n            }\r\n        }\r\n        case CHANGE_PLAYER: {\r\n            const newPlayer = state.currentPlayer === 'X' ? 'O' : 'X';\r\n\r\n            return {\r\n                ...state,\r\n                currentPlayer: newPlayer\r\n            }\r\n        }\r\n        case CHECK_WINNER: {\r\n            let winnerPlayer = undefined;\r\n            let winCombination = undefined;\r\n            let players = state.players;\r\n\r\n            const checkWinner = checkWinnerFunc(state.field);\r\n\r\n            if(checkWinner === 'isDraw') {\r\n                return  {\r\n                    ...state,\r\n                    isDraw: true\r\n                }\r\n            } else if(checkWinner) {\r\n                winnerPlayer = state.players[state.currentPlayer].name;\r\n                winCombination = checkWinner;\r\n                players[state.currentPlayer].score++;\r\n\r\n                return {\r\n                    ...state,\r\n                    winnerPlayer,\r\n                    winCombination,\r\n                    players\r\n                }\r\n            }\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        }\r\n        case RENEW_GAME: {\r\n            return {\r\n                ...state,\r\n                winnerPlayer: undefined,\r\n                winCombination: undefined,\r\n                isDraw: false,\r\n                currentPlayer: 'X',\r\n                field: ['', '', '',\r\n                        '', '', '',\r\n                        '', '', '']\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPlayers = players => ({type: SET_PLAYERS, players});\r\nexport const finishInitialProcess = () => ({type: FINISH_INITIAL_PROCESS});\r\nexport const updateGameField = (numOfClickedField) => ({type: UPDATE_GAME_FIELD, numOfClickedField});\r\nexport const changePlayer = () => ({type: CHANGE_PLAYER});\r\nexport const checkWinner = () => ({type: CHECK_WINNER});\r\nexport const renewGame = () => ({type: RENEW_GAME});\r\n\r\nexport default appReducer","import {createStore, combineReducers} from 'redux';\r\nimport gameReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    game: gameReducer,\r\n});\r\n\r\nlet store  = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport style from './gameField.module.css';\nimport winLine from './stylesForWinLine.module.css';\n\nconst GameField = (props) => {\n    const fields = props.field.map((a,num) => {\n        let thisFieldIsBusy\n        const classForWinnerLine = num === 0 && props.winCombination ? winLine[props.winCombination] : '';\n\n        if(props.field[num]) {\n            thisFieldIsBusy = props.field[num] === 'X' ? style.cross : style.zero;\n        }\n\n        return (\n                <div key={num} className={`${style.markupField} ${classForWinnerLine}`}>\n                    <div\n                        className={`${style.gameField} ${thisFieldIsBusy ? thisFieldIsBusy : ''}`}\n                        onClick={\n                            props.field[num] || props.winnerPlayer\n                                ? null\n                                : () => props.onPlayerStep(num)\n                        }\n                    ></div>\n                </div>\n            )\n    });\n\n    return (\n        <div className={style.game}>\n            {fields}\n        </div>\n    )\n}\n\nexport default GameField","import React from 'react';\r\nimport style from './scoreField.module.css';\r\n\r\nconst ScoreField = (props) => {\r\n    const playersAndScore = [props.playerInfo['X'], props.playerInfo['O']]\r\n\r\n    return (\r\n        <div className={style.score}>\r\n            <h1>Score</h1>\r\n            <div className={style.players}>\r\n                <div className={style.scorePlayer}>\r\n                    <span className={style.namesPlayer}>{playersAndScore[0].name}:</span><span>{playersAndScore[0].score}</span>\r\n                </div>\r\n                <div className={style.scorePlayer}>\r\n                    <span className={style.namesPlayer}>{playersAndScore[1].name}:</span><span>{playersAndScore[1].score}</span>\r\n                </div>\r\n            </div>\r\n            <div className={style.currentPlayer}>\r\n                <div>current player</div>\r\n                <div className={style.current}>\r\n                    {props.playerInfo[props.currentPlayer].name} (<span>{props.currentPlayer}</span>)\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreField","import React from 'react';\r\nimport style from './winOrDrawField.module.css';\r\n\r\nconst WinOrDrawField = (props) => {\r\n    return (\r\n        <div className={style.win}>\r\n            <h1>\r\n                {props.isDraw\r\n                    ? 'is draw!'\r\n                    : `${props.winnerPlayer} won!`\r\n                }\r\n            </h1>\r\n            <button onClick={props.onRetryGame}>Retry game</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WinOrDrawField;","import React from 'react';\r\nimport style from './game.module.css';\r\n\r\nimport GameField from \"./gameField/gameField\";\r\nimport ScoreField from \"./scoreField/scoreField\";\r\nimport WinOrDrawField from \"./winOrDrawField/winOrDrawField\";\r\n\r\nconst Game = (props) => {\r\n    return (\r\n        <div className={style.container}>\r\n            <GameField\r\n                field={props.field}\r\n                currentPlayer={props.currentPlayer}\r\n                onPlayerStep={props.onPlayerStep}\r\n                winnerPlayer={props.winnerPlayer}\r\n                winCombination={props.winCombination}\r\n            />\r\n            {props.winnerPlayer || props.isDraw\r\n                ? <WinOrDrawField\r\n                    winnerPlayer={props.winnerPlayer}\r\n                    isDraw={props.isDraw}\r\n                    onRetryGame={props.onRetryGame}\r\n                />\r\n                : <ScoreField\r\n                    playerInfo={props.playerInfo}\r\n                    currentPlayer={props.currentPlayer}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport {connect} from 'react-redux';\nimport Game from './game';\n\nimport {\n    updateGameField,\n    changePlayer,\n    checkWinner,\n    renewGame\n} from '../../Redux/app-reducer'\n\n\nconst GameContainer = (props) => {\n    const onPlayerStep = (numOfClickedField) => {\n        props.updateGameField(numOfClickedField);\n        props.checkWinner();\n        props.changePlayer();\n    }\n\n    const onRetryGame = () => {\n        props.renewGame();\n    }\n\n    return (\n        <Game\n            playerInfo={props.playerInfo}\n            field={props.field}\n            currentPlayer={props.currentPlayer}\n            winnerPlayer={props.winnerPlayer}\n            winCombination={props.winCombination}\n            isDraw={props.isDraw}\n            onPlayerStep={onPlayerStep}\n            onRetryGame={onRetryGame}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    field: state.game.field,\n    currentPlayer: state.game.currentPlayer,\n    winnerPlayer: state.game.winnerPlayer,\n    winCombination: state.game.winCombination,\n    isDraw: state.game.isDraw,\n    playerInfo: state.game.players\n});\n\nexport default connect(mapStateToProps, {updateGameField, changePlayer, checkWinner, renewGame})(GameContainer);","import React from \"react\";\r\nimport style from './FormControls.module.css'\r\n\r\nexport const FormControls = ({ name, errors, status = {}, touched, ...props }) => {\r\n    return (\r\n        <div className={style.form + ' ' + ((errors[name] || status[name]) && touched[name] ? style.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {touched[name]\r\n                ? <div>\r\n                    <p>{errors[name]}</p>\r\n                    <p>{status[name]}</p>\r\n                  </div>\r\n                : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ field, form, ...props }) => {\r\n    return <FormControls {...form} name={field.name}><input {...field} {...props}/></FormControls>\r\n}","import React from 'react';\r\nimport {Formik, Field, Form} from 'formik';\r\nimport {Input} from \"../Common/FormControls/FormControls\";\r\nimport style from './initialGame.module.css';\r\n\r\nimport {ValidateList, nameHasSpaces, nameIsEmpty, maxLength} from \"../../utils/validator/validator\";\r\n\r\nconst maxLengthForValidate = maxLength(10);\r\nconst validateForForm = ValidateList([nameHasSpaces, nameIsEmpty, maxLengthForValidate]);\r\n\r\nconst InitialGame = (props) => {\r\n    return (\r\n        <div className={style.container}>\r\n            <h1>enter player names</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    player1: '',\r\n                    player2: ''\r\n                }}\r\n                onSubmit={props.onSubmit}\r\n            >\r\n                {({\r\n                      handleSubmit,\r\n                  }) => (\r\n                    <Form onSubmit={handleSubmit} className={style.form}>\r\n                        <div>\r\n                            <Field name='player1' placeholder='player1' component={Input} validate={validateForForm}/>\r\n                            <Field name='player2' placeholder='player2' component={Input} validate={validateForForm}/>\r\n                        </div>\r\n                        <button type='submit'>\r\n                            Send\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InitialGame\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport InitialGame from \"./initialGame\";\r\nimport {\r\n    setPlayers,\r\n    finishInitialProcess\r\n} from '../../Redux/app-reducer';\r\n\r\nconst InitialGameContainer = (props) => {\r\n    const onSubmit = (form) => {\r\n        props.setPlayers([form.player1, form.player2]);\r\n        props.finishInitialProcess();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <InitialGame onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setPlayers, finishInitialProcess})(InitialGameContainer);\r\n\r\n","import './App.css';\nimport {Provider} from 'react-redux';\nimport store from './Redux/store';\nimport {connect} from 'react-redux';\n\nimport GameContainer from \"./Components/Game/gameContainer\"\nimport InitialGameContainer from \"./Components/InitialGame/initialGameContainer\";\n\nconst App = ({isStartGame}) => {\n        return (\n            <div className='entryContainer'>\n                {!isStartGame\n                    ? <InitialGameContainer />\n                    : <GameContainer />\n                }\n            </div>\n\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isStartGame: state.game.initialProcessIsFinish,\n});\n\nlet AppContainer = connect(mapStateToProps, null)(App);\n\nconst TicTacToe = () => {\n  return (\n      <Provider store={store}>\n          <AppContainer />\n      </Provider>\n  );\n}\n\nexport default TicTacToe;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"scoreField_score__3FAKB\",\"scorePlayer\":\"scoreField_scorePlayer__Wr8xz\",\"currentPlayer\":\"scoreField_currentPlayer__2yktR\",\"players\":\"scoreField_players__3k34j\",\"namesPlayer\":\"scoreField_namesPlayer__2YGdN\",\"current\":\"scoreField_current__3RMnz\"};"],"sourceRoot":""}